<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" creationComplete="initApp();"
				xmlns:component="deepen.core.component.*" xmlns:charts="charts.*" backgroundColor="white" verticalAlign="middle">
	
	<mx:Script>
		<![CDATA[
			import common.AdobeExportImage;
			
			import flash.external.ExternalInterface;
			
			import mx.charts.HitData;
			import mx.charts.chartClasses.Series;
			import mx.charts.renderers.CircleItemRenderer;
			import mx.charts.series.ColumnSeries;
			import mx.charts.series.items.ColumnSeriesItem;
			import mx.charts.series.items.LineSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectProxy; 
			
			[Bindable]
			private var dateXmlList:ArrayCollection=new ArrayCollection();//初始化数据
			private function initApp():void {
				Math.random();
				service.url="xml_data/StackedLineData.xml?chartNo="+Math.random();
				service.send();//从本地XML数据文件中 读取数据到dateXmlList:ArrayCollection中 
				if(ExternalInterface.available)
				{
					try {
						ExternalInterface.addCallback("exportChart", callExportChart);
					}
					catch (error:SecurityError )
					{
						trace("A Security Error occurred " + error.message);
					}
					catch (error:Error)
					{
						trace("An Error occurred: " + error.message);
					}
				}
				else
				{
					trace("External interface is not available for this container.");
				}
			}
			
			private function callExportChart(url:String):void{
				var exportImage:AdobeExportImage = new AdobeExportImage();
				exportImage.sendImageByte(chartPanel,url);
			}
			
			private function handleData(evt:ResultEvent):void 
			{
				dateXmlList=evt.result.root.node;
			}
			
			private function myDataTipFunction(hitData:HitData):String 
				
			{ 
				
				var itemsDictionary:Dictionary = new Dictionary(); 
				
				var total:Number = 0; 
				
				
				for(var property:Object in hitData.item){ 
					
					itemsDictionary[property] = hitData.item[property]; 
					
				} 
				if(hitData.chartItem.element.name=='LineSeries26'){
				//var cSI:LineSeriesItem = hitData.chartItem as LineSeriesItem;
				var series1:LineSeries = LineSeries(hitData.element);
				var item1:LineSeriesItem = LineSeriesItem(hitData.chartItem); 
				var quarter1:Object = h2.formatForScreen(item1.xValue); 			
				var value1:Number = Number(item1.yValue)
				return  "<b>" + series1.displayName + "</b>\n" + 
					"" + quarter1 + "\n" + 	
					value1.toFixed(2)+"\n" ;
				
				}
				else
				{
				var series:ColumnSeries = ColumnSeries(hitData.element); 

				
				
				for( var key:Object in itemsDictionary) 
					
				{ 
					
					for( var i:int = 0; i < series.stacker.series.length; i++){ 
						
						if(series.stacker.series[i].yField == key.toString()){ 
							
							total += itemsDictionary[key]; 
							
						} 
						
					} 
					
				} 
				
				
				var item:ColumnSeriesItem = ColumnSeriesItem(hitData.chartItem); 
				var quarter:Object = h2.formatForScreen(item.xValue); 			
				var value:Number = Number(item.yValue) - Number(item.minValue); 
				var percent:Number = Math.round(value / total * 1000) / 10; 
				//return (hitData.chartItem.element.name=='LineSeries28'?'tt':'nn'
				return  "<b>" + series.displayName + "</b>\n" + 
					"" + quarter + "\n" + 	
					 value.toFixed(2)+"(" +  percent + "%)\n" + 
					"<i>total:</i>" + total.toFixed(2); 
				}
				
			} 
			
		]]>
	</mx:Script>
	<mx:HTTPService id="service" showBusyCursor="true" useProxy="false" result="handleData(event)"/>  
	<mx:Panel id="chartPanel" title="Graph工数" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
	<mx:ApplicationControlBar dock="true"  width="100%">
		<mx:Label text="Graph工数" id="chartTitleLable" enabled="true" width="133" height="35" fontSize="22"  fontWeight="bold"/>
		<mx:Spacer width="100%" />
		<mx:Legend dataProvider="{stackedLineChart}"  />
	</mx:ApplicationControlBar>
	
	<mx:ColumnChart id="stackedLineChart" dataProvider="{dateXmlList}" 
					showDataTips="true" width="95%" height="95%" fontSize="12" horizontalCenter="-1" verticalCenter="40" dataTipFunction="myDataTipFunction">
		<!--categoryField：横坐标数据节点-->
		<mx:horizontalAxis>
			<mx:CategoryAxis id="h2" 
							 categoryField="months" />
		</mx:horizontalAxis>
		
		<mx:horizontalAxisRenderers>
			<mx:AxisRenderer placement="bottom" axis="{h2}" canDropLabels="true" showLabels="true" showLine="true"/>
		</mx:horizontalAxisRenderers>
		
		<!--纵坐标-->
		<mx:verticalAxis>
			<mx:LinearAxis id="ver2"  title="工数分类" maximumLabelPrecision="2" />              
		</mx:verticalAxis>
		<mx:verticalAxisRenderers>
			<mx:AxisRenderer placement="left" axis="{ver2}" />
			<mx:AxisRenderer placement="right"  axis="{ver1}" showLine="true" />
		</mx:verticalAxisRenderers>
		
		<mx:series>
			<mx:ColumnSet type="stacked">
				<mx:ColumnSeries displayName="实绩工数"  horizontalAxis="{h2}" yField="data1"/>
				<mx:ColumnSeries displayName="固定工数"  horizontalAxis="{h2}" yField="data2"/>
				<mx:ColumnSeries displayName="对比外工数"  horizontalAxis="{h2}" yField="data3"/>
			<!--	<mx:ColumnSeries displayName="非生产工数"  horizontalAxis="{h2}" yField="data4"/>  -->
			</mx:ColumnSet>
			<!--纵坐标轴2-->
			<mx:LineSeries  xField="months" yField="data5" displayName="标准工数" radius="6"  itemRenderer="mx.charts.renderers.CircleItemRenderer">
				<mx:verticalAxis>
					<mx:LinearAxis id="ver1" title="标准工数" maximumLabelPrecision="2" />
				</mx:verticalAxis>
			</mx:LineSeries>
		</mx:series>
	</mx:ColumnChart>
	</mx:Panel>
</mx:Application>